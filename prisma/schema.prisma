// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  drivingLicense Boolean @default(false)
  note      String?
  adminNote String?
  role      Role
  avatarUrl String?
  activatedAccount  Boolean  @default(false)

  supervisedExams Exam[] @relation("ExamToSupervisor") 
  invigilatedExams Exam[] @relation("ExamToInvigilator")
  examinedExams Exam[] @relation("ExamToExaminer")
  availabilityDays DayOfExams[] @relation("UserToAvailabilityDays")
}

model DayOfExams{
  id Int @id @default(autoincrement())
  date DateTime
  userId Int
  user User @relation("UserToAvailabilityDays", fields: [userId], references:[id])
  response Response @default(No)
}

model Exam {
  id        Int      @id @default(autoincrement())
  venue     String
  type    TypeOfExam
  levels   Level[]
  startTime DateTime
  endTime   DateTime
  note      String?
  supervisors User[] @relation("ExamToSupervisor")
  invigilators User[] @relation("ExamToInvigilator")
  examiners User[] @relation("ExamToExaminer")
  candidates Candidate[]
}

model Candidate {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  dateOfBirth DateTime
  phone     String
  mockTest  Boolean @default(false)
  paid      Boolean @default(false)
  note      String?
  partnerId Int? @unique
  partner   Candidate? @relation("PartnerToCandidate", fields: [partnerId], references: [id])
  partneredBy Candidate? @relation("PartnerToCandidate")
  idForExam Int?
  exams     Exam[]
}

enum Role {
  Office
  Supervisor
  SeniorSupervisor
  Invigilator
  SeniorInvigilator
  Tech
  Examiner
}

enum TypeOfExam {
  Mock
  Paper
  Computer
  Speaking
}

enum Response {
  Yes
  No
  Maybe
}

enum Level {
  A1
  A2
  B1
  B2
  C1
  C2
}